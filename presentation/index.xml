<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Presentations on Evert Timberg</title>
    <link>http://everttimberg.io/presentation/</link>
    <description>Recent content in Presentations on Evert Timberg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 21 Jan 2017 12:48:35 -0500</lastBuildDate>
    <atom:link href="http://everttimberg.io/presentation/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Introduction to Chart.js</title>
      <link>http://everttimberg.io/presentation/introduction-to-chartjs/</link>
      <pubDate>Sat, 21 Jan 2017 12:48:35 -0500</pubDate>
      
      <guid>http://everttimberg.io/presentation/introduction-to-chartjs/</guid>
      <description>&lt;section&gt;
    &lt;h1&gt;Introduction to Chart.js&lt;/h1&gt;
    &lt;h3&gt;February 2nd, 2017&lt;/h3&gt;
    &lt;img class=&#34;plain&#34; src=&#34;http://everttimberg.io/images/chartjs/chartjs-logo.svg&#34; style=&#34;background: transparent;&#34;&gt;&lt;/img&gt;
&lt;/section&gt;
&lt;section&gt;
    &lt;style&gt;
    ul.intro &gt; li {
        font-size: 36px;
    }
    &lt;/style&gt;
    &lt;h2&gt;Welcome and Introduction&lt;/h2&gt;
    &lt;ul class=&#34;intro&#34;&gt;
        &lt;li class=&#34;fragment&#34;&gt;
            &lt;p&gt;Who am I?&lt;/p&gt;
            &lt;ul&gt;
                &lt;li&gt;Evert Timberg&lt;/li&gt;
                &lt;li&gt;Maintainer of Chart.js since Dec. 2014&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li class=&#34;fragment&#34;&gt;
            &lt;p&gt;Outline&lt;/p&gt;
            &lt;ul&gt;
                &lt;li&gt;What is Chart.js&lt;/li&gt;
                &lt;li&gt;Creating a chart&lt;/li&gt;
                &lt;li&gt;Updating charts&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li class=&#34;fragment&#34;&gt;
            Slides available at &lt;a href=&#34;http://everttimberg.io/presentation/introduction-to-chartjs&#34;&gt;http://everttimberg.io/presentation/introduction-to-chartjs/&lt;/a&gt;
        &lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;
&lt;section&gt;
    &lt;h2&gt;What is Chart.js?&lt;/h2&gt;
    &lt;ul&gt;
        &lt;li class=&#34;fragment&#34;&gt;Creates interactive charts&lt;/li&gt;
        &lt;li class=&#34;fragment&#34;&gt;Uses the HTML5 Canvas&lt;/li&gt;
        &lt;li class=&#34;fragment&#34;&gt;Responsive sizing&lt;/li&gt;
        &lt;li class=&#34;fragment&#34;&gt;Built-in animations&lt;/li&gt;
    &lt;/ul&gt;
    &lt;aside class=&#34;notes&#34;&gt;
        Why canvas?
        &lt;ul&gt;
            &lt;li&gt;good performance&lt;/li&gt;
            &lt;li&gt;animations&lt;/li&gt;
            &lt;li&gt;easy export as an image&lt;/li&gt;
        &lt;/ul&gt;
    &lt;/aside&gt;
&lt;/section&gt;
&lt;section&gt;
    &lt;section&gt;
        &lt;h2&gt;Creating Your First Chart&lt;/h2&gt;
        &lt;ol&gt;
            &lt;li class=&#34;fragment&#34;&gt;Include Chart.js&lt;/li&gt;
            &lt;li class=&#34;fragment&#34;&gt;Setup the Canvas&lt;/li&gt;
            &lt;li class=&#34;fragment&#34;&gt;Create the chart&lt;/li&gt;
        &lt;/ol&gt;
    &lt;/section&gt;
    &lt;section&gt;
        &lt;h3&gt;Include Chart.js&lt;/h3&gt;
        &lt;pre&gt;&lt;code class=&#34;html stretch&#34;&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;/head&amp;gt;
&amp;lt;/html&amp;gt;
        &lt;/code&gt;&lt;/pre&gt;
        &lt;aside class=&#34;notes&#34;&gt;
            Why cdn?
            &lt;ul&gt;
                &lt;li&gt;More likely to be in browser cache&lt;/li&gt;
                &lt;li&gt;Faster downloads&lt;/li&gt;
                &lt;li&gt;Easy versioning&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/aside&gt;
    &lt;/section&gt;
    &lt;section&gt;
        &lt;h3&gt;Setup the Canvas&lt;/h3&gt;
        &lt;pre&gt;&lt;code class=&#34;html stretch&#34;&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;div&amp;gt;
            &amp;lt;canvas id=&#34;chart&#34;&amp;gt;&amp;lt;/canvas&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
        &lt;/code&gt;&lt;/pre&gt;
        &lt;aside class=&#34;notes&#34;&gt;
            &lt;ul&gt;
                &lt;li&gt;Chart.js uses a single canvas&lt;/li&gt;
                &lt;li&gt;Everything drawn on the canvas&lt;/li&gt;
                &lt;li&gt;Fills the container by default, hence the div&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/aside&gt;
    &lt;/section&gt;
    &lt;section&gt;
        &lt;h3&gt;Create the Chart&lt;/h3&gt;
        &lt;p&gt;We&#39;ll insert this into a script tag&lt;/p&gt;
        &lt;pre&gt;&lt;code&gt;
let ctx = document.getElementById(&#39;chart&#39;).getContext(&#39;2d&#39;);
let chart = new Chart(ctx, {
    type: &#39;line&#39;,
    data: {
        datasets: [{
            label: &#39;Data&#39;,
            data: [10, 0, 20, 30],
            borderColor: &#39;rgb(255, 99, 132)&#39;,
            fill: false
        }],
        labels: [&#39;Jan&#39;, &#39;Feb&#39;, &#39;Mar&#39;, &#39;Apr&#39;]
    }, 
});
        &lt;/code&gt;&lt;/pre&gt;
    &lt;/section&gt;
    &lt;section&gt;
        &lt;h3&gt;Putting it all Together&lt;/h3&gt;
        &lt;pre&gt;&lt;code class=&#34;html stretch&#34;&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;div&amp;gt;&amp;lt;canvas id=&#34;chart&#34;&amp;gt;&amp;lt;/canvas&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;script&amp;gt;
            let ctx = document.getElementById(&#39;chart&#39;).getContext(&#39;2d&#39;);
            let chart = new Chart(ctx, {
                type: &#39;line&#39;,
                data: {
                    datasets: [{
                        label: &#39;Data&#39;,
                        data: [10, 0, 20, 30],
                        borderColor: &#39;rgb(255, 99, 132)&#39;,
                        fill: false
                    }],
                    labels: [&#39;Jan&#39;, &#39;Feb&#39;, &#39;Mar&#39;, &#39;Apr&#39;]
                }, 
            });         
        &amp;lt;/script&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
        &lt;/code&gt;&lt;/pre&gt;
    &lt;/section&gt;
    &lt;section&gt;
        &lt;h3&gt;Result&lt;/h3&gt;
        &lt;div&gt;
            &lt;canvas id=&#34;chart&#34; style=&#34;background: white;&#34;&gt;&lt;/canvas&gt;
        &lt;/div&gt;
        &lt;script&gt;
        window.addEventListener(&#39;load&#39;, function() {
            var ctx = document.getElementById(&#39;chart&#39;).getContext(&#39;2d&#39;);
            var chart = new Chart(ctx, {
                type: &#39;line&#39;,
                data: {
                    datasets: [{
                        label: &#39;Data&#39;,
                        data: [10, 0, 20, 30],
                        borderColor: &#39;rgb(255, 99, 132)&#39;,
                        fill: false
                    }],
                    labels: [&#39;Jan&#39;, &#39;Feb&#39;, &#39;Mar&#39;, &#39;Apr&#39;] 
                }
            });
        });
        &lt;/script&gt;
        &lt;aside class=&#34;notes&#34;&gt;
            &lt;ul&gt;
                &lt;li&gt;Should see a chart like this&lt;/li&gt;
                &lt;li&gt;If not, check the console for errors&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/aside&gt;
    &lt;/section&gt;
&lt;/section&gt;
&lt;section&gt;
    &lt;section&gt;
        &lt;h3&gt;Initializing the Chart&lt;/h3&gt;
        &lt;p&gt;Let&#39;s explore how the chart is created&lt;/p&gt;
        &lt;div class=&#34;fragment fade-in&#34;&gt;
            &lt;pre&gt;&lt;code&gt;
let ctx = document.getElementById(&#39;chart&#39;).getContext(&#39;2d&#39;);
            &lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
        &lt;div class=&#34;fragment fade-in&#34;&gt;
            &lt;pre&gt;&lt;code&gt;
let chart = new Chart(ctx, config);
            &lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
        &lt;aside class=&#34;notes&#34;&gt;
            &lt;ul&gt;
                &lt;li&gt;First part gets the canvas DOM node&lt;/li&gt;
                &lt;li&gt;The context is what we use to do actual drawing&lt;/li&gt;
                &lt;li&gt;We create a new instance of the Chart class&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/aside&gt;
    &lt;/section&gt;
    &lt;section&gt;
        &lt;h3&gt;Constructor Config Object&lt;/h3&gt;
        &lt;div class=&#34;fragment fade-in&#34;&gt;
            &lt;pre&gt;&lt;code&gt;let config = {
    type: &#39;line&#39;,
    data: {
        labels: [&#39;Jan&#39;, &#39;Feb&#39;, &#39;Mar&#39;, &#39;Apr&#39;],
        datasets: [{
            data: [10, 0, 20, 30],
            label: &#39;My dataset&#39;,
        }]
    },
    options: {
        tooltips: {
            mode: &#39;single&#39;
        }
    }
};&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
        &lt;aside class=&#34;notes&#34;&gt;
            &lt;ul&gt;
                &lt;li&gt;8 different chart types. line, bar, horizontal-bar, radar, polar area, doughnut, pie, bubble&lt;/li&gt;
                &lt;li&gt;Dataset options configure options that are specifc to that dataset. Like different colours for each line&lt;/li&gt;
                &lt;li&gt;Options object are used to configure the entire chart&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/aside&gt;
    &lt;/section&gt;
&lt;/section&gt;
&lt;section&gt;
    &lt;section&gt;
        &lt;h3&gt;Updating Charts&lt;/h3&gt;
        &lt;p class=&#34;fragment&#34;&gt;Charts can be updated on the fly&lt;/p&gt;
        &lt;div class=&#34;fragment&#34;&gt;
            &lt;pre&gt;&lt;code&gt;
chart.data.datasets[0].data = [30, 50, 70, 75];
chart.update();
            &lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
        &lt;p class=&#34;fragment&#34;&gt;It&#39;s that easy!&lt;/p&gt;
    &lt;/section&gt;
    &lt;section&gt;
        &lt;h3&gt;Demo&lt;/h3&gt;
        &lt;div&gt;
            &lt;canvas id=&#34;chart-data-update&#34;&gt;&lt;/canvas&gt;
        &lt;/div&gt;
        &lt;button id=&#34;randomize-data&#34; class=&#34;chart&#34;&gt;Randomize&lt;/button&gt;
        &lt;style&gt;
        button.chart {
            margin: 0;
            padding: 20;
            background: white;
            border: 1px solid white;
            font-size: 20px;
        }
        &lt;/style&gt;
        &lt;script&gt;
        window.addEventListener(&#39;load&#39;, function() {
            var ctx = document.getElementById(&#39;chart-data-update&#39;).getContext(&#39;2d&#39;);
            var chart = new Chart(ctx, {
                type: &#39;line&#39;,
                data: {
                    datasets: [{
                        label: &#39;Data&#39;,
                        data: [10, 0, 20, 30],
                        borderColor: &#39;rgb(255, 99, 132)&#39;,
                        fill: false,
                        pointBackgroundColor: &#39;white&#39;
                    }],
                    labels: [&#39;Jan&#39;, &#39;Feb&#39;, &#39;Mar&#39;, &#39;Apr&#39;] 
                },
                options: {
                    legend: {
                        display: false
                    },
                    scales: {
                        xAxes: [{
                            gridLines: {
                                color: &#39;white&#39;,
                            },
                            ticks: {
                                fontColor: &#39;white&#39;
                            }
                        }],
                        yAxes: [{
                            gridLines: {
                                color: &#39;white&#39;,
                                drawTicks: false
                            },
                            ticks: {
                                fontColor: &#39;white&#39;
                            }
                        }]
                    }
                }
            });
            document.getElementById(&#39;randomize-data&#39;).addEventListener(&#39;click&#39;, function () {
                chart.data.datasets[0].data = chart.data.datasets[0].data.map(function() {
                    return Math.round(100 * Math.random());
                });
                chart.update();
            });
        });
        &lt;/script&gt;
        &lt;aside class=&#34;notes&#34;&gt;
            &lt;ul&gt;
                &lt;li&gt;Can replace any part of the data object&lt;/li&gt;
                &lt;li&gt;Can replace the entire data object&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/aside&gt;
    &lt;/section&gt;
    &lt;section&gt;
        &lt;p&gt;Starting with v2.5, options can also be updated&lt;/p&gt;
        &lt;div class=&#34;fragment&#34;&gt;
            &lt;pre&gt;&lt;code&gt;
chart.options.tooltips.mode = false;
chart.update();
            &lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
    &lt;/section&gt;
    &lt;section&gt;
        &lt;h3&gt;Demo&lt;/h3&gt;
        &lt;div&gt;
            &lt;canvas id=&#34;chart-options-update&#34;&gt;&lt;/canvas&gt;
        &lt;/div&gt;
        &lt;div class=&#34;tooltip options&#34;&gt;
            &lt;div class=&#34;tooltip option&#34;&gt;
                &lt;label&gt;Tooltip mode:&lt;/label&gt;
                &lt;select id=&#34;tooltip-mode&#34; class=&#34;chart&#34;&gt;
                    &lt;option value=&#34;index&#34;&gt;index&lt;/option&gt;
                    &lt;option value=&#34;point&#34;&gt;point&lt;/option&gt;
                    &lt;option value=&#34;dataset&#34;&gt;dataset&lt;/option&gt;
                    &lt;option value=&#34;nearest&#34;&gt;nearest&lt;/option&gt;
                    &lt;option value=&#34;x&#34;&gt;x&lt;/option&gt;
                    &lt;option value=&#34;y&#34;&gt;y&lt;/option&gt;
                &lt;/select&gt;
            &lt;/div&gt;
            &lt;div class=&#34;tooltip option&#34;&gt;
                &lt;label&gt;Intersect?&lt;/label&gt;
                &lt;input type=&#34;checkbox&#34; id=&#34;tooltip-intersect&#34; checked class=&#34;chart&#34; /&gt;
            &lt;/div&gt;
            &lt;div class=&#34;tooltip option&#34;&gt;
                &lt;label&gt;Position mode&lt;/label&gt;
                &lt;select id=&#34;tooltip-position&#34; class=&#34;chart&#34;&gt;
                    &lt;option value=&#34;average&#34;&gt;average&lt;/option&gt;
                    &lt;option value=&#34;nearest&#34;&gt;nearest&lt;/option&gt;
                &lt;/select&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;style&gt;
        select.chart {
            margin: 0;
            padding: 20;
            background: white;
            border: 1px solid white;
            font-size: 20px;
        }
        input.chart {
        }
        .tooltip.options {
            display: flex;
            flex-direction: row;
        }
        .tooltip.option {
            flex-grow: 1;
            flex-shrink: 0;
            flex-basis: 200px;
        }
        &lt;/style&gt;
        &lt;script&gt;
        window.addEventListener(&#39;load&#39;, function() {
            var ctx = document.getElementById(&#39;chart-options-update&#39;).getContext(&#39;2d&#39;);
            var chart = new Chart(ctx, {
                type: &#39;line&#39;,
                data: {
                    datasets: [{
                        label: &#39;Data&#39;,
                        data: [10, 0, 20, 30],
                        borderColor: &#39;rgb(255, 99, 132)&#39;,
                        fill: false,
                        pointBackgroundColor: &#39;white&#39;
                    }, {
                        label: &#39;Data&#39;,
                        data: [70, 5, 20, 45],
                        borderColor: &#39;rgb(54, 162, 235)&#39;,
                        fill: false,
                        pointBackgroundColor: &#39;white&#39;
                    }],
                    labels: [&#39;Jan&#39;, &#39;Feb&#39;, &#39;Mar&#39;, &#39;Apr&#39;] 
                },
                options: {
                    legend: {
                        display: false
                    },
                    scales: {
                        xAxes: [{
                            gridLines: {
                                color: &#39;white&#39;,
                            },
                            ticks: {
                                fontColor: &#39;white&#39;
                            }
                        }],
                        yAxes: [{
                            gridLines: {
                                color: &#39;white&#39;,
                                drawTicks: false
                            },
                            ticks: {
                                fontColor: &#39;white&#39;
                            }
                        }]
                    },
                    tooltips: {
                        mode: &#39;label&#39;,
                        position: &#39;average&#39;,
                        intersect: true,
                        backgroundColor: &#39;rgba(255, 255, 255, 0.8)&#39;,
                        bodyFontColor: &#39;black&#39;,
                        titleFontColor: &#39;black&#39;
                    }
                }
            });
            document.getElementById(&#39;tooltip-mode&#39;).addEventListener(&#39;change&#39;, function (e) {
                chart.options.tooltips.mode = e.target.value;
                chart.update();
            });
            document.getElementById(&#39;tooltip-intersect&#39;).addEventListener(&#39;change&#39;, function(e) {
                chart.options.tooltips.intersect = e.target.checked;
                chart.update();
            });
            document.getElementById(&#39;tooltip-position&#39;).addEventListener(&#39;change&#39;, function(e) {
                chart.options.tooltips.position = e.target.value;
                chart.update();
            })
        });
        &lt;/script&gt;
        &lt;aside class=&#34;notes&#34;&gt;
            &lt;ul&gt;
                &lt;li&gt;Cannot update axis types (yet)&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/aside&gt;
    &lt;/section&gt;
&lt;/section&gt;
&lt;section&gt;
    &lt;h3&gt;For more Info&lt;/h3&gt;
    &lt;p&gt;&lt;a href=&#34;http://chartjs.org/docs&#34; target=&#34;_blank&#34;&gt;http://chartjs.org/docs&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;&lt;a href=&#34;https://github.com/chartjs/chart.js&#34; target=&#34;_blank&#34;&gt;https://github.com/chartjs/chart.js&lt;/a&gt;&lt;/p&gt;
    &lt;p class=&#34;fragment&#34;&gt;Questions?&lt;/p&gt;
&lt;/section&gt;
</description>
    </item>
    
  </channel>
</rss>