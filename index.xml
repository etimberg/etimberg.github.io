<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Evert Timberg</title>
    <link>http://everttimberg.io/</link>
    <description>Recent content on Evert Timberg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 31 Dec 2016 18:45:47 -0500</lastBuildDate>
    <atom:link href="http://everttimberg.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Reflecting on Chart.js in 2016</title>
      <link>http://everttimberg.io/post/new-year-2017/</link>
      <pubDate>Sat, 31 Dec 2016 18:45:47 -0500</pubDate>
      
      <guid>http://everttimberg.io/post/new-year-2017/</guid>
      <description>

&lt;script src=&#34;http://everttimberg.io/js/Chart.min.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;Chart.js has had an incredible last year. In April, we successfully launched v2.0 culminating a year and a half of hard work. We&amp;rsquo;ve had a number of smaller releases after that, each of which has helped build on the incredible interactivity that comes standard in v2. We also released our first new chart type in a long time; the horizontal bar chart. This was a long sought request, that fit in well with the work we did in v2.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
Coupled with this work, we saw a dramatic increase in use this year, with monthly NPM installs going from ~20k to over 200k per month. It&amp;rsquo;s amazing and humbling to see so many users choosing Chart.js for their projects.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;chart-container&#34;&gt;
	&lt;canvas id=&#34;chartjs-monthly-downloads&#34; class=&#34;extra-large-chart&#34;&gt;&lt;/canvas&gt;
&lt;/div&gt;
&lt;script&gt;
var ctx = document.getElementById(&#34;chartjs-monthly-downloads&#34;).getContext(&#39;2d&#39;);
var chartInstance = new Chart(ctx, 
{
    type: &#39;line&#39;,
    data: {
        labels: [&#39;Jan 2015&#39;, &#39;Feb 2015&#39;, &#39;Mar 2015&#39;, &#39;Apr 2015&#39;, &#39;May 2015&#39;, &#39;Jun 2015&#39;, &#39;Jul 2015&#39;, &#39;Aug 2015&#39;, &#39;Sep 2015&#39;, &#39;Oct 2015&#39;, &#39;Nov 2015&#39;, &#39;Dec 2015&#39;, &#39;Jan 2016&#39;, &#39;Feb 2016&#39;, &#39;Mar 2016&#39;, &#39;Apr 2016&#39;, &#39;May 2016&#39;, &#39;Jun 2016&#39;, &#39;Jul 2016&#39;, &#39;Aug 2016&#39;, &#39;Sep 2016&#39;, &#39;Oct 2016&#39;, &#39;Nov 2016&#39;, &#39;Dec 2016&#39;],
        datasets: [{
            data: [826, 1240, 2156, 3231, 4050, 5802, 6817, 7029, 8251, 10870, 13887, 17470, 20498, 27370, 42472, 61385, 70688, 79499, 86129, 113562, 135716, 181799, 204399, 201846],
            label: &#39;Chart.js NPM Installs&#39;,
            borderColor: &#39;#36A2EB&#39;,
            pointBackgroundColor: &#39;#36A2EB&#39;,
            backgroundColor: &#39;rgba(54,162,235, 0.4)&#39;,
            fill: false
        }]
    },
    options: {
        title: {
            display: true,
            text: &#39;Chart.js Monthly Installs&#39;
        },
        legend: {
            display: false
        },
        tooltips: {
            callbacks: {
                label: function(tooltipItem, data) {
                    var ds = data.datasets[tooltipItem.datasetIndex];
                    var datasetLabel = ds.label;
                    return datasetLabel + &#34;: &#34; + ds.data[tooltipItem.index].toLocaleString();
                }
            }
        }
    }
}
);
&lt;/script&gt;
&lt;em&gt;The data in the above chart is from &lt;a href=&#34;https://npm-stat.com/charts.html?package=Chart.js&amp;amp;from=2015-01-01&amp;amp;to=2016-12-31&#34;&gt;NPM Stat&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;2017-roadmap&#34;&gt;2017 Roadmap&lt;/h2&gt;

&lt;p&gt;&lt;br&gt;
In 2017, we are committed to working on improving the ability to run Chart.js in an environment other than the browser. In version 2.5, we will have factored out the browser specific events into a removable piece known as a &lt;code&gt;platform&lt;/code&gt;. With this change, it will be possible to create a build that runs in a JavaScript environment that does not have the DOM APIs.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
We have also committed to improving our documentation. We are working on creating auto-generated documentation so that we can have the latest dev docs auto update when new commits are added. This will allow us to be more responsive to user feedback and ensure timely corrections when the docs have errors.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
Overall, 2017 is shaping up to be a great year for Chart.js. Have a safe and happy new year!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introduction to Chart.js</title>
      <link>http://everttimberg.io/presentation/introduction-to-chartjs/</link>
      <pubDate>Sat, 21 Jan 2017 12:48:35 -0500</pubDate>
      
      <guid>http://everttimberg.io/presentation/introduction-to-chartjs/</guid>
      <description>&lt;section&gt;
    &lt;h1&gt;Introduction to Chart.js&lt;/h1&gt;
    &lt;h3&gt;February 2nd, 2017&lt;/h3&gt;
    &lt;img class=&#34;plain&#34; src=&#34;http://everttimberg.io/images/chartjs/chartjs-logo.svg&#34; style=&#34;background: transparent;&#34;&gt;&lt;/img&gt;
&lt;/section&gt;
&lt;section&gt;
    &lt;style&gt;
    ul.intro &gt; li {
        font-size: 36px;
    }
    &lt;/style&gt;
    &lt;h2&gt;Welcome and Introduction&lt;/h2&gt;
    &lt;ul class=&#34;intro&#34;&gt;
        &lt;li class=&#34;fragment&#34;&gt;
            &lt;p&gt;Who am I?&lt;/p&gt;
            &lt;ul&gt;
                &lt;li&gt;Evert Timberg&lt;/li&gt;
                &lt;li&gt;Maintainer of Chart.js since Dec. 2014&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li class=&#34;fragment&#34;&gt;
            &lt;p&gt;Outline&lt;/p&gt;
            &lt;ul&gt;
                &lt;li&gt;What is Chart.js&lt;/li&gt;
                &lt;li&gt;Creating a chart&lt;/li&gt;
                &lt;li&gt;Updating charts&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li class=&#34;fragment&#34;&gt;
            Slides available at &lt;a href=&#34;http://everttimberg.io/presentation/introduction-to-chartjs&#34;&gt;http://everttimberg.io/presentation/introduction-to-chartjs/&lt;/a&gt;
        &lt;/li&gt;
    &lt;/ul&gt;
&lt;/section&gt;
&lt;section&gt;
    &lt;h2&gt;What is Chart.js?&lt;/h2&gt;
    &lt;ul&gt;
        &lt;li class=&#34;fragment&#34;&gt;Creates interactive charts&lt;/li&gt;
        &lt;li class=&#34;fragment&#34;&gt;Uses the HTML5 Canvas&lt;/li&gt;
        &lt;li class=&#34;fragment&#34;&gt;Responsive sizing&lt;/li&gt;
        &lt;li class=&#34;fragment&#34;&gt;Built-in animations&lt;/li&gt;
    &lt;/ul&gt;
    &lt;aside class=&#34;notes&#34;&gt;
        Why canvas?
        &lt;ul&gt;
            &lt;li&gt;good performance&lt;/li&gt;
            &lt;li&gt;animations&lt;/li&gt;
            &lt;li&gt;easy export as an image&lt;/li&gt;
        &lt;/ul&gt;
    &lt;/aside&gt;
&lt;/section&gt;
&lt;section&gt;
    &lt;section&gt;
        &lt;h2&gt;Creating Your First Chart&lt;/h2&gt;
        &lt;ol&gt;
            &lt;li class=&#34;fragment&#34;&gt;Include Chart.js&lt;/li&gt;
            &lt;li class=&#34;fragment&#34;&gt;Setup the Canvas&lt;/li&gt;
            &lt;li class=&#34;fragment&#34;&gt;Create the chart&lt;/li&gt;
        &lt;/ol&gt;
    &lt;/section&gt;
    &lt;section&gt;
        &lt;h3&gt;Include Chart.js&lt;/h3&gt;
        &lt;pre&gt;&lt;code class=&#34;html stretch&#34;&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;/head&amp;gt;
&amp;lt;/html&amp;gt;
        &lt;/code&gt;&lt;/pre&gt;
        &lt;aside class=&#34;notes&#34;&gt;
            Why cdn?
            &lt;ul&gt;
                &lt;li&gt;More likely to be in browser cache&lt;/li&gt;
                &lt;li&gt;Faster downloads&lt;/li&gt;
                &lt;li&gt;Easy versioning&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/aside&gt;
    &lt;/section&gt;
    &lt;section&gt;
        &lt;h3&gt;Setup the Canvas&lt;/h3&gt;
        &lt;pre&gt;&lt;code class=&#34;html stretch&#34;&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;div&amp;gt;
            &amp;lt;canvas id=&#34;chart&#34;&amp;gt;&amp;lt;/canvas&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
        &lt;/code&gt;&lt;/pre&gt;
        &lt;aside class=&#34;notes&#34;&gt;
            &lt;ul&gt;
                &lt;li&gt;Chart.js uses a single canvas&lt;/li&gt;
                &lt;li&gt;Everything drawn on the canvas&lt;/li&gt;
                &lt;li&gt;Fills the container by default, hence the div&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/aside&gt;
    &lt;/section&gt;
    &lt;section&gt;
        &lt;h3&gt;Create the Chart&lt;/h3&gt;
        &lt;p&gt;We&#39;ll insert this into a script tag&lt;/p&gt;
        &lt;pre&gt;&lt;code&gt;
let ctx = document.getElementById(&#39;chart&#39;).getContext(&#39;2d&#39;);
let chart = new Chart(ctx, {
    type: &#39;line&#39;,
    data: {
        datasets: [{
            label: &#39;Data&#39;,
            data: [10, 0, 20, 30],
            borderColor: &#39;rgb(255, 99, 132)&#39;,
            fill: false
        }],
        labels: [&#39;Jan&#39;, &#39;Feb&#39;, &#39;Mar&#39;, &#39;Apr&#39;]
    }, 
});
        &lt;/code&gt;&lt;/pre&gt;
    &lt;/section&gt;
    &lt;section&gt;
        &lt;h3&gt;Putting it all Together&lt;/h3&gt;
        &lt;pre&gt;&lt;code class=&#34;html stretch&#34;&gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;div&amp;gt;&amp;lt;canvas id=&#34;chart&#34;&amp;gt;&amp;lt;/canvas&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;script&amp;gt;
            let ctx = document.getElementById(&#39;chart&#39;).getContext(&#39;2d&#39;);
            let chart = new Chart(ctx, {
                type: &#39;line&#39;,
                data: {
                    datasets: [{
                        label: &#39;Data&#39;,
                        data: [10, 0, 20, 30],
                        borderColor: &#39;rgb(255, 99, 132)&#39;,
                        fill: false
                    }],
                    labels: [&#39;Jan&#39;, &#39;Feb&#39;, &#39;Mar&#39;, &#39;Apr&#39;]
                }, 
            });         
        &amp;lt;/script&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
        &lt;/code&gt;&lt;/pre&gt;
    &lt;/section&gt;
    &lt;section&gt;
        &lt;h3&gt;Result&lt;/h3&gt;
        &lt;div&gt;
            &lt;canvas id=&#34;chart&#34; style=&#34;background: white;&#34;&gt;&lt;/canvas&gt;
        &lt;/div&gt;
        &lt;script&gt;
        window.addEventListener(&#39;load&#39;, function() {
            var ctx = document.getElementById(&#39;chart&#39;).getContext(&#39;2d&#39;);
            var chart = new Chart(ctx, {
                type: &#39;line&#39;,
                data: {
                    datasets: [{
                        label: &#39;Data&#39;,
                        data: [10, 0, 20, 30],
                        borderColor: &#39;rgb(255, 99, 132)&#39;,
                        fill: false
                    }],
                    labels: [&#39;Jan&#39;, &#39;Feb&#39;, &#39;Mar&#39;, &#39;Apr&#39;] 
                }
            });
        });
        &lt;/script&gt;
        &lt;aside class=&#34;notes&#34;&gt;
            &lt;ul&gt;
                &lt;li&gt;Should see a chart like this&lt;/li&gt;
                &lt;li&gt;If not, check the console for errors&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/aside&gt;
    &lt;/section&gt;
&lt;/section&gt;
&lt;section&gt;
    &lt;section&gt;
        &lt;h3&gt;Initializing the Chart&lt;/h3&gt;
        &lt;p&gt;Let&#39;s explore how the chart is created&lt;/p&gt;
        &lt;div class=&#34;fragment fade-in&#34;&gt;
            &lt;pre&gt;&lt;code&gt;
let ctx = document.getElementById(&#39;chart&#39;).getContext(&#39;2d&#39;);
            &lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
        &lt;div class=&#34;fragment fade-in&#34;&gt;
            &lt;pre&gt;&lt;code&gt;
let chart = new Chart(ctx, config);
            &lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
        &lt;aside class=&#34;notes&#34;&gt;
            &lt;ul&gt;
                &lt;li&gt;First part gets the canvas DOM node&lt;/li&gt;
                &lt;li&gt;The context is what we use to do actual drawing&lt;/li&gt;
                &lt;li&gt;We create a new instance of the Chart class&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/aside&gt;
    &lt;/section&gt;
    &lt;section&gt;
        &lt;h3&gt;Constructor Config Object&lt;/h3&gt;
        &lt;div class=&#34;fragment fade-in&#34;&gt;
            &lt;pre&gt;&lt;code&gt;let config = {
    type: &#39;line&#39;,
    data: {
        labels: [&#39;Jan&#39;, &#39;Feb&#39;, &#39;Mar&#39;, &#39;Apr&#39;],
        datasets: [{
            data: [10, 0, 20, 30],
            label: &#39;My dataset&#39;,
        }]
    },
    options: {
        tooltips: {
            mode: &#39;single&#39;
        }
    }
};&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
        &lt;aside class=&#34;notes&#34;&gt;
            &lt;ul&gt;
                &lt;li&gt;8 different chart types. line, bar, horizontal-bar, radar, polar area, doughnut, pie, bubble&lt;/li&gt;
                &lt;li&gt;Dataset options configure options that are specifc to that dataset. Like different colours for each line&lt;/li&gt;
                &lt;li&gt;Options object are used to configure the entire chart&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/aside&gt;
    &lt;/section&gt;
&lt;/section&gt;
&lt;section&gt;
    &lt;section&gt;
        &lt;h3&gt;Updating Charts&lt;/h3&gt;
        &lt;p class=&#34;fragment&#34;&gt;Charts can be updated on the fly&lt;/p&gt;
        &lt;div class=&#34;fragment&#34;&gt;
            &lt;pre&gt;&lt;code&gt;
chart.data.datasets[0].data = [30, 50, 70, 75];
chart.update();
            &lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
        &lt;p class=&#34;fragment&#34;&gt;It&#39;s that easy!&lt;/p&gt;
    &lt;/section&gt;
    &lt;section&gt;
        &lt;h3&gt;Demo&lt;/h3&gt;
        &lt;div&gt;
            &lt;canvas id=&#34;chart-data-update&#34;&gt;&lt;/canvas&gt;
        &lt;/div&gt;
        &lt;button id=&#34;randomize-data&#34; class=&#34;chart&#34;&gt;Randomize&lt;/button&gt;
        &lt;style&gt;
        button.chart {
            margin: 0;
            padding: 20;
            background: white;
            border: 1px solid white;
            font-size: 20px;
        }
        &lt;/style&gt;
        &lt;script&gt;
        window.addEventListener(&#39;load&#39;, function() {
            var ctx = document.getElementById(&#39;chart-data-update&#39;).getContext(&#39;2d&#39;);
            var chart = new Chart(ctx, {
                type: &#39;line&#39;,
                data: {
                    datasets: [{
                        label: &#39;Data&#39;,
                        data: [10, 0, 20, 30],
                        borderColor: &#39;rgb(255, 99, 132)&#39;,
                        fill: false,
                        pointBackgroundColor: &#39;white&#39;
                    }],
                    labels: [&#39;Jan&#39;, &#39;Feb&#39;, &#39;Mar&#39;, &#39;Apr&#39;] 
                },
                options: {
                    legend: {
                        display: false
                    },
                    scales: {
                        xAxes: [{
                            gridLines: {
                                color: &#39;white&#39;,
                            },
                            ticks: {
                                fontColor: &#39;white&#39;
                            }
                        }],
                        yAxes: [{
                            gridLines: {
                                color: &#39;white&#39;,
                                drawTicks: false
                            },
                            ticks: {
                                fontColor: &#39;white&#39;
                            }
                        }]
                    }
                }
            });
            document.getElementById(&#39;randomize-data&#39;).addEventListener(&#39;click&#39;, function () {
                chart.data.datasets[0].data = chart.data.datasets[0].data.map(function() {
                    return Math.round(100 * Math.random());
                });
                chart.update();
            });
        });
        &lt;/script&gt;
        &lt;aside class=&#34;notes&#34;&gt;
            &lt;ul&gt;
                &lt;li&gt;Can replace any part of the data object&lt;/li&gt;
                &lt;li&gt;Can replace the entire data object&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/aside&gt;
    &lt;/section&gt;
    &lt;section&gt;
        &lt;p&gt;Starting with v2.5, options can also be updated&lt;/p&gt;
        &lt;div class=&#34;fragment&#34;&gt;
            &lt;pre&gt;&lt;code&gt;
chart.options.tooltips.mode = false;
chart.update();
            &lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
    &lt;/section&gt;
    &lt;section&gt;
        &lt;h3&gt;Demo&lt;/h3&gt;
        &lt;div&gt;
            &lt;canvas id=&#34;chart-options-update&#34;&gt;&lt;/canvas&gt;
        &lt;/div&gt;
        &lt;div class=&#34;tooltip options&#34;&gt;
            &lt;div class=&#34;tooltip option&#34;&gt;
                &lt;label&gt;Tooltip mode:&lt;/label&gt;
                &lt;select id=&#34;tooltip-mode&#34; class=&#34;chart&#34;&gt;
                    &lt;option value=&#34;index&#34;&gt;index&lt;/option&gt;
                    &lt;option value=&#34;point&#34;&gt;point&lt;/option&gt;
                    &lt;option value=&#34;dataset&#34;&gt;dataset&lt;/option&gt;
                    &lt;option value=&#34;nearest&#34;&gt;nearest&lt;/option&gt;
                    &lt;option value=&#34;x&#34;&gt;x&lt;/option&gt;
                    &lt;option value=&#34;y&#34;&gt;y&lt;/option&gt;
                &lt;/select&gt;
            &lt;/div&gt;
            &lt;div class=&#34;tooltip option&#34;&gt;
                &lt;label&gt;Intersect?&lt;/label&gt;
                &lt;input type=&#34;checkbox&#34; id=&#34;tooltip-intersect&#34; checked class=&#34;chart&#34; /&gt;
            &lt;/div&gt;
            &lt;div class=&#34;tooltip option&#34;&gt;
                &lt;label&gt;Position mode&lt;/label&gt;
                &lt;select id=&#34;tooltip-position&#34; class=&#34;chart&#34;&gt;
                    &lt;option value=&#34;average&#34;&gt;average&lt;/option&gt;
                    &lt;option value=&#34;nearest&#34;&gt;nearest&lt;/option&gt;
                &lt;/select&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;style&gt;
        select.chart {
            margin: 0;
            padding: 20;
            background: white;
            border: 1px solid white;
            font-size: 20px;
        }
        input.chart {
        }
        .tooltip.options {
            display: flex;
            flex-direction: row;
        }
        .tooltip.option {
            flex-grow: 1;
            flex-shrink: 0;
            flex-basis: 200px;
        }
        &lt;/style&gt;
        &lt;script&gt;
        window.addEventListener(&#39;load&#39;, function() {
            var ctx = document.getElementById(&#39;chart-options-update&#39;).getContext(&#39;2d&#39;);
            var chart = new Chart(ctx, {
                type: &#39;line&#39;,
                data: {
                    datasets: [{
                        label: &#39;Data&#39;,
                        data: [10, 0, 20, 30],
                        borderColor: &#39;rgb(255, 99, 132)&#39;,
                        fill: false,
                        pointBackgroundColor: &#39;white&#39;
                    }, {
                        label: &#39;Data&#39;,
                        data: [70, 5, 20, 45],
                        borderColor: &#39;rgb(54, 162, 235)&#39;,
                        fill: false,
                        pointBackgroundColor: &#39;white&#39;
                    }],
                    labels: [&#39;Jan&#39;, &#39;Feb&#39;, &#39;Mar&#39;, &#39;Apr&#39;] 
                },
                options: {
                    legend: {
                        display: false
                    },
                    scales: {
                        xAxes: [{
                            gridLines: {
                                color: &#39;white&#39;,
                            },
                            ticks: {
                                fontColor: &#39;white&#39;
                            }
                        }],
                        yAxes: [{
                            gridLines: {
                                color: &#39;white&#39;,
                                drawTicks: false
                            },
                            ticks: {
                                fontColor: &#39;white&#39;
                            }
                        }]
                    },
                    tooltips: {
                        mode: &#39;label&#39;,
                        position: &#39;average&#39;,
                        intersect: true,
                        backgroundColor: &#39;rgba(255, 255, 255, 0.8)&#39;,
                        bodyFontColor: &#39;black&#39;,
                        titleFontColor: &#39;black&#39;
                    }
                }
            });
            document.getElementById(&#39;tooltip-mode&#39;).addEventListener(&#39;change&#39;, function (e) {
                chart.options.tooltips.mode = e.target.value;
                chart.update();
            });
            document.getElementById(&#39;tooltip-intersect&#39;).addEventListener(&#39;change&#39;, function(e) {
                chart.options.tooltips.intersect = e.target.checked;
                chart.update();
            });
            document.getElementById(&#39;tooltip-position&#39;).addEventListener(&#39;change&#39;, function(e) {
                chart.options.tooltips.position = e.target.value;
                chart.update();
            })
        });
        &lt;/script&gt;
        &lt;aside class=&#34;notes&#34;&gt;
            &lt;ul&gt;
                &lt;li&gt;Cannot update axis types (yet)&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/aside&gt;
    &lt;/section&gt;
&lt;/section&gt;
&lt;section&gt;
    &lt;h3&gt;For more Info&lt;/h3&gt;
    &lt;p&gt;&lt;a href=&#34;http://chartjs.org/docs&#34; target=&#34;_blank&#34;&gt;http://chartjs.org/docs&lt;/a&gt;&lt;/p&gt;
    &lt;p&gt;&lt;a href=&#34;https://github.com/chartjs/chart.js&#34; target=&#34;_blank&#34;&gt;https://github.com/chartjs/chart.js&lt;/a&gt;&lt;/p&gt;
    &lt;p class=&#34;fragment&#34;&gt;Questions?&lt;/p&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>Exploring Toronto</title>
      <link>http://everttimberg.io/album/exploring-toronto/</link>
      <pubDate>Sun, 10 Apr 2016 16:37:15 -0400</pubDate>
      
      <guid>http://everttimberg.io/album/exploring-toronto/</guid>
      <description>&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/toronto/toronto1.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/toronto/toronto1_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/toronto/toronto2.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/toronto/toronto2_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/toronto/toronto3.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/toronto/toronto3_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/toronto/toronto4.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/toronto/toronto4_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/toronto/toronto5.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/toronto/toronto5_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/toronto/toronto6.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/toronto/toronto6_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/toronto/Luminato_2012_1.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/toronto/Luminato_2012_1_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/toronto/Luminato_2012_2.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/toronto/Luminato_2012_2_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/toronto/Luminato_2012_3.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/toronto/Luminato_2012_3_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/toronto/Luminato_2012_4.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/toronto/Luminato_2012_4_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/toronto/Luminato_2012_5.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/toronto/Luminato_2012_5_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;
</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>http://everttimberg.io/about/</link>
      <pubDate>Wed, 30 Mar 2016 18:54:01 -0400</pubDate>
      
      <guid>http://everttimberg.io/about/</guid>
      <description>&lt;p&gt;&lt;image class=&#34;highlight-image&#34; src=&#34;http://everttimberg.io/images/about_profile.png&#34; /&gt;
Hi, I&amp;rsquo;m &lt;strong&gt;Evert Timberg&lt;/strong&gt;. I&amp;rsquo;m a software developer living in Toronto, Canada.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
I am currently working for National Instruments as a Staff Software Developer. I started at NI soon after graduating from the University of Toronto in 2013 with a BASc in Electrical Engineering.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
Initially I worked on &lt;a href=&#34;https://en.wikipedia.org/wiki/NI_Multisim&#34;&gt;Multisim&lt;/a&gt; which is primarily written in C++. I had a chance to work on some fairly old legacy code, including the Berkeley &lt;a href=&#34;https://en.wikipedia.org/wiki/SPICE&#34;&gt;SPICE&lt;/a&gt; engine.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
Since December of 2014, I have been a maintainer of &lt;a href=&#34;http://chartjs.org&#34;&gt;Chart.js&lt;/a&gt;. In that time I have written a lot of the improvements for the version 2 release including multiple axis support and the ability to create new scale types with relative ease. I am also the author of a number of extensions for Chart.js including &lt;a href=&#34;https://github.com/chartjs/Chart.Zoom.js&#34;&gt;Chart.Zoom.js&lt;/a&gt;, &lt;a href=&#34;https://github.com/chartjs/Chart.Annotation.js&#34;&gt;Chart.Annotation.js&lt;/a&gt;, and &lt;a href=&#34;https://github.com/chartjs/Chart.smith.js&#34;&gt;Chart.Smith.js&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
To contact me, email me at evert [dot] timberg [at] gmail.com or send me an invitation to connect on social media.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About this Site</title>
      <link>http://everttimberg.io/post/welcome/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://everttimberg.io/post/welcome/</guid>
      <description>&lt;p&gt;Welcome to my personal site. I wrote the site using &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;, a static site generator written in Go. It&amp;rsquo;s been a great introduction to the Go template language. Hosting is done via static files published to Github pages.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
I tried to make the site depend on as little JavaScript as possible. The only necessary JS is used to trigger the mobile menu view. Everything else was written using pure CSS and media queries. I used Sass to compile the CSS. The &lt;a href=&#34;https://github.com/mastastealth/sass-flex-mixin&#34;&gt;sass flex mixin&lt;/a&gt; was particularly helpful for generating the flexbox styling used in the photo albums.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
I used &lt;a href=&#34;https://www.npmjs.com/package/gulp-image-resize&#34;&gt;gulp-image-resize&lt;/a&gt; in a gulp task to automatically generate thumbnails for images. This greatly improved page performance and kept the process relatively pain free. In the future, I will likely add automatic watermarking as well.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Chart.js</title>
      <link>http://everttimberg.io/project/chartjs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://everttimberg.io/project/chartjs/</guid>
      <description>&lt;p&gt;Since late 2014, I have been involved with &lt;a href=&#34;http://www.chartjs.org&#34;&gt;Chart.js&lt;/a&gt;. I am currently, along with Tanner Linsley, one of the primary contributors and was responsible for a number of the big developments in version 2.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
It&amp;rsquo;s been a great adventure, and my first experience with open-source development. It&amp;rsquo;s scary at times to think that my code gets 50k+ downloads a month. Chart.js was also my first experience using the HTML 5 Canvas APIs, but it felt quite natural coming from C++ code that made use of Windows &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/windows/desktop/dd145203(v=vs.85).aspx&#34;&gt;GDI&lt;/a&gt; APIs. A lot of the tricks used to improve canvas performance are similar to the tricks done in legacy GDI code.&lt;/p&gt;

&lt;div class=&#34;chart-container&#34;&gt;
	&lt;canvas id=&#34;line-chart&#34; class=&#34;large-chart&#34;&gt;&lt;/canvas&gt;
&lt;/div&gt;
&lt;script&gt;
var ctx = document.getElementById(&#34;line-chart&#34;).getContext(&#39;2d&#39;);
var chartInstance = new Chart(ctx, 
{
    type: &#39;line&#39;,
    data: {
        datasets: [{
            data: [10, 20, 30],
            label: &#39;Dataset 1&#39;,
            borderColor: &#39;#36A2EB&#39;,
            pointBackgroundColor: &#39;#36A2EB&#39;,
            backgroundColor: &#39;rgba(54,162,235, 0.4)&#39;
        }, {
            data: [30, 20, 15],
            label: &#39;Dataset 2&#39;,
            borderColor: &#39;rgb(255,99,132)&#39;,
            pointBackgroundColor: &#39;rgb(255,99,132)&#39;,
            backgroundColor: &#39;rgba(255,99,132, 0.4)&#39;
        }],
        labels: [&#39;Label 1&#39;, &#39;Label 2&#39;, &#39;Label 3&#39;]
    },
    options: {
        tooltips: {
            mode: &#39;label&#39;
        },
        responsiveAnimationDuration: 0
    }
}
);
&lt;/script&gt;

&lt;p&gt;In addition to feature work, I added most of the initial tests to the project. I added the infrastructure to get tests and coverage analysis running. I enjoy adding and improving tests when writing features.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Spain 2013</title>
      <link>http://everttimberg.io/album/spain/</link>
      <pubDate>Tue, 12 Apr 2016 21:44:00 -0400</pubDate>
      
      <guid>http://everttimberg.io/album/spain/</guid>
      <description>&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/spain/Madrid_graffiti.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/spain/Madrid_graffiti_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/spain/graffiti_2.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/spain/graffiti_2_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/spain/night_1.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/spain/night_1_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/spain/night_2.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/spain/night_2_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/spain/museum_1.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/spain/museum_1_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/spain/art_1.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/spain/art_1_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/spain/art_2.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/spain/art_2_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;
</description>
    </item>
    
    <item>
      <title>Chart.js Zoom Plug-In</title>
      <link>http://everttimberg.io/project/chart.zoom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://everttimberg.io/project/chart.zoom/</guid>
      <description>&lt;p&gt;In early May 2016, I wrote a &lt;a href=&#34;https://github.com/chartjs/Chart.Zoom.js&#34;&gt;Zoom and Pan plugin&lt;/a&gt; to work with the new plugin system introduced in Chart.js v2.1.0. The plugin is touch ready and allows the use of gestures, such as pinch, to zoom the chart. Take a look at the chart below and try it out!&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
In the future I think the zoom plugin will make a good reference as to what plugins can look like. It&amp;rsquo;s already help other to create plugins for Chart.js including a great one for &lt;a href=&#34;https://github.com/bbc/Chart.Bands.js&#34;&gt;creating gradient fills&lt;/a&gt; based on scale values. I&amp;rsquo;m looking forward to what the community can build over time.&lt;/p&gt;

&lt;div class=&#34;chart-container&#34;&gt;
	&lt;canvas id=&#34;zoom-chart&#34; class=&#34;large-chart&#34;&gt;&lt;/canvas&gt;
&lt;/div&gt;
&lt;script&gt;
var ctx = document.getElementById(&#34;zoom-chart&#34;).getContext(&#39;2d&#39;);
var chartInstance = new Chart(ctx, 
{
    type: &#39;scatter&#39;,
    data: {
        datasets: [{
            data: [{
                x: -100,
                y: 0
            }, {
                x: 0,
                y: 50
            }, {
                x: 75,
                y: 75
            }, {
                x: 0,
                y: -50
            }],
            label: &#39;Dataset 1&#39;,
            borderColor: &#39;#36A2EB&#39;,
            pointBackgroundColor: &#39;#36A2EB&#39;,
            backgroundColor: &#39;rgba(54,162,235, 0.4)&#39;
        }]
    },
    options: {
        title: {
            display: true,
            text: &#39;Scatter Chart with Zoom and Pan&#39;
        },
        scales: {
            xAxes: [{
                position: &#39;bottom&#39;,
                gridLines: {
                    zeroLineColor: &#34;rgba(0,255,0,1)&#34;
                },
                ticks: {
                    maxRotation: 0,
                    callback: function(tick) {
                        return tick.toFixed(1);
                    }
                }
            }],
            yAxes: [{
                position: &#39;left&#39;,
                gridLines: {
                    zeroLineColor: &#34;rgba(0,255,0,1)&#34;
                },
                ticks: {
                    reverse: true,
                    callback: function(tick) {
                        return tick.toFixed(1);
                    }
                }
            }]
        },
        pan: {
            enabled: true,
            mode: &#39;xy&#39;
        },
        zoom: {
            enabled: true,
            mode: &#39;xy&#39;,
            limits: {
                max: 10,
                min: 0.5
            }
        }
    }
}
);
&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Riomaggiore 2013</title>
      <link>http://everttimberg.io/album/riomaggiore/</link>
      <pubDate>Tue, 12 Apr 2016 21:44:00 -0400</pubDate>
      
      <guid>http://everttimberg.io/album/riomaggiore/</guid>
      <description>&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/riomaggiore/riomaggiore_1.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/riomaggiore/riomaggiore_1_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/riomaggiore/riomaggiore_2.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/riomaggiore/riomaggiore_2_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/riomaggiore/riomaggiore_3.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/riomaggiore/riomaggiore_3_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/riomaggiore/riomaggiore_4.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/riomaggiore/riomaggiore_4_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/riomaggiore/riomaggiore_5.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/riomaggiore/riomaggiore_5_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/riomaggiore/riomaggiore_6.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/riomaggiore/riomaggiore_6_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/riomaggiore/riomaggiore_7.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/riomaggiore/riomaggiore_7_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/riomaggiore/riomaggiore_8.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/riomaggiore/riomaggiore_8_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/riomaggiore/riomaggiore_9.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/riomaggiore/riomaggiore_9_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;
</description>
    </item>
    
    <item>
      <title>Smith Charts with Chart.js</title>
      <link>http://everttimberg.io/project/chart.smith/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://everttimberg.io/project/chart.smith/</guid>
      <description>&lt;p&gt;Back when I was in university, I used Smith Charts all the time to visualize transmission line network matching. There aren&amp;rsquo;t many web ways of creating one, so I took a stab at it.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
The charts turned out surprisingly well. I found it much easier to do a lot of the scale work in a circular coordinate system with a final conversion to cartesian coordinates at the end.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
Building on the theme of reusable Chart components in Chart.js v2, I was able to reuse most of the existing functionality from the line chart controller. I hope in the future I can clean up the code for the Smith Chart and make it a good reference design for what extensions can look like.&lt;/p&gt;

&lt;div class=&#34;chart-container&#34;&gt;
	&lt;canvas id=&#34;smith-chart&#34; class=&#34;extra-large-chart&#34;&gt;&lt;/canvas&gt;
&lt;/div&gt;
&lt;script&gt;
var ctx = document.getElementById(&#34;smith-chart&#34;).getContext(&#39;2d&#39;);
var chartInstance = new Chart(ctx, 
{
    type: &#39;smith&#39;,
    data: {
        datasets: [{
            data: [{
                real: 0.1,
                imag: 0
            }, {
                real: 1,
                imag: 0
            }, {
                real: 0,
                imag: -1
            }, {
                real: 20,
                imag: 0
            }],
            label: &#39;Dataset 1&#39;,
            borderColor: &#39;#36A2EB&#39;,
            pointBackgroundColor: &#39;#36A2EB&#39;,
            backgroundColor: &#39;rgba(54,162,235, 0.4)&#39;
        }]
    },
    options: {
        title: {
            display: true,
            text: &#39;Smith Chart Extension&#39;
        },
        legend: {
            display: false
        }
    }
}
);
&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Naples and Florence</title>
      <link>http://everttimberg.io/album/Naples%20and%20Florence/</link>
      <pubDate>Tue, 12 Apr 2016 21:44:00 -0400</pubDate>
      
      <guid>http://everttimberg.io/album/Naples%20and%20Florence/</guid>
      <description>&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/naples_and_florence/florence_1.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/naples_and_florence/florence_1_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/naples_and_florence/florence_2.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/naples_and_florence/florence_2_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/naples_and_florence/florence_3.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/naples_and_florence/florence_3_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/naples_and_florence/florence_4.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/naples_and_florence/florence_4_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/naples_and_florence/florence_5.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/naples_and_florence/florence_5_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/naples_and_florence/florence_6.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/naples_and_florence/florence_6_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/naples_and_florence/florence_7.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/naples_and_florence/florence_7_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/naples_and_florence/naples_1.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/naples_and_florence/naples_1_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/naples_and_florence/naples_2.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/naples_and_florence/naples_2_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;

&lt;a class=&#34;album-link&#34; href=&#34;http://everttimberg.io/images/naples_and_florence/naples_3.png&#34;&gt;
	&lt;div class=&#34;album-image-container&#34;&gt;
		&lt;image class=&#34;album-image&#34; src=&#34;http://everttimberg.io/images/naples_and_florence/naples_3_thumb.png&#34; /&gt;
		
	&lt;/div&gt;
&lt;/a&gt;
</description>
    </item>
    
  </channel>
</rss>