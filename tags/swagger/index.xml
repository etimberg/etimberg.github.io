<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>swagger on Evert Timberg</title>
    <link>https://everttimberg.io/tags/swagger/</link>
    <description>Recent content in swagger on Evert Timberg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 24 Oct 2019 20:06:03 -0400</lastBuildDate><atom:link href="https://everttimberg.io/tags/swagger/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Self Documenting APIs with Flask and Swagger</title>
      <link>https://everttimberg.io/blog/flask-api-spec/</link>
      <pubDate>Thu, 24 Oct 2019 20:06:03 -0400</pubDate>
      
      <guid>https://everttimberg.io/blog/flask-api-spec/</guid>
      <description>Flask is a simple Python framework for creating web applications. It can be used to create API servers in a microservices architecture. When doing so, it is helpful to provide API documentation that ships with your service. This post outlines a technique for shipping OpenAPI v3 documentation from your service while co-locating the documentation with the API implementation.
Keeping the documentation with the route definition ensures that it is easy to update, updates can be clearly identified during code review, and it helps to onboard new developers to a project.</description>
    </item>
    
  </channel>
</rss>
